[metadata]
name = collective.taskqueue
version = 0.8.3.dev0
description = Asynchronous task queue for Plone
long_description = file: README.rst, CONTRIBUTORS.rst, CHANGELOG.rst
keywords = Python Plone
author = Asko Soukka
author_email = asko.soukka@iki.fi
url = https://github.com/datakurre/collective.taskqueue/
license = GPL version 2
classifiers =
    Development Status :: 4 - Beta
    Environment :: Web Environment
    Framework :: Plone
    Framework :: Plone :: 5.0
    License :: OSI Approved :: GNU General Public License v2 (GPLv2)
    Programming Language :: Python
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3.7
    Topic :: Internet :: WWW/HTTP
    Topic :: Internet :: WWW/HTTP :: Dynamic Content
    Topic :: Software Development :: Libraries :: Python Modules

[options]
include_package_data = True
install_requires =
    setuptools
    six
    ZServer
    twisted
    five.globalrequest
namespace_packages =
    collective
package_dir =
    = src
packages = find:
zip_safe = False
#python_requires =
#    ==3.7

[options.packages.find]
where =
    src

[options.extras_require]
test =
    requests
    plone.app.testing
    plone.app.robotframework
    # Plone KGS does not use this version, because it would break
    # Remove if your package shall be part of coredev.
    # plone_coredev tests as of 2016-04-01.
    # plone.testing>=5.0.0
    plone.app.contenttypes
    plone.app.robotframework [debug]
redis =
    msgpack-python

[options.entry_points]
z3c.autoinclude.plugin =
    target = plone

[check-manifest]
ignore =
    *.cfg
    .coveragerc
    .editorconfig
    .gitattributes

[isort]
force_alphabetical_sort_within_sections = True
force_single_line = True
from_first = True
line_length = 200
lines_after_imports = 2
lines_between_types = 0
no_sections = True
not_skip =
    __init__.py

[pylama]
# linters = pycodestyle,pydocstyle,pyflakes,pylint,eradicate
linters = pycodestyle,pydocstyle,pyflakes,pylint
ignore = C0103,C0111,C0302,C0330,C0411,C0412,D100,D102,D105,D107,D203,D213,E0611,E1101,E1102,E1121,E1133,R0205,R0901,R0902,R0903,R0904,R0913,R0914,R0915,R1702

# C0103 - We do not enforce module scope constants to be uppercase
# C0111 - We do not enforce module scope docstrings
# C0302 - We do not enforce line number limits for modules
# C0330 - This collides with black and is a known pylint bug: https://github.com/PyCQA/pylint/issues/289
# C0411 - We do a simple flat sort of imports
# C0412 - We do a simple flat sort of imports
#  D100 - We do not enforce docstrings on the module scope
#  D102 - We do not enforce docstrings on public methods
#  D105 - We do not enforce docstrings on magic methods
#  D107 - We do not enforce docstrings in __init__
#  D203 - We rather have the mandatory newline after a docstring
#  D213 - We rather have the mandatory newline after a docstring
# E0611 - Zope interfaces confuse module member checking
# E1101 - Zope interfaces confuse object member checking
# E1102 - Zope interfaces confuse callability checking
# E1121 - Zope interfaces confuse argument count checking
# E1133 - Zope interfaces confuse iterability checking
# R0205 - We do not enforce avoiding inheritance from object
# R0901 - Zope inheritance hierarchies are too deep to limit ancestor count
# R0902 - We do not enforce instance member count limits
# R0903 - We do not enforce minimum public method counts
# R0904 - We do not enforce public method count limits
# R0913 - We do not enforce argument count limits
# R0914 - We do not enforce local variable count limits
# R0915 - We do not enforce scope statement count limits
# R1702 - We do not enforce nesting depth limits

[pylama:pycodestyle]
max_line_length = 125

[pylama:pylint]
max_line_length = 125
extension-pkg-whitelist = lxml

[pylama:*/tests/*]
# linters = pycodestyle,pyflakes,pylint,eradicate
linters = pycodestyle,pyflakes,pylint
